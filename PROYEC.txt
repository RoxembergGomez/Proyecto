<style>
  table
{
    counter-reset: rowNumber;
}

table tr > td:first-child
{
    counter-increment: rowNumber;
}

table tr td:first-child::before
{
    content: counter(rowNumber);
    min-width: 20em;
    margin-right: 10em;
}
</style>
<div class="col-md-12 col-sm-12 ">
  <div class="x_panel">
    <div class="x_title text-center">
      <h5 style="font-weight: bold; color: #000000;" >AGREGAR SUBPROCESOS</h5>              
      <?php
      foreach ($infoid->result() as $row)
        {
        ?>
        <input type="hidden" name="idProceso" id="idProceso" value="<?php echo $row->idProceso; ?>" required>
       <?php
        }
      ?>

    </div>
		
      <div class="row">
        <div class="col-md-2">
          <label class="float-right">* Descripción de Subproceso:</label>
        </div>
        <div class="col-md-4">
          <input type="text" name="suproceso" id="subProceso" class="col-md-12 form-control" placeholder="Describa el subproceso" autocomplete="off" >
						<div class="valid-feedback">
				Please select a valid state.
				</div>
        </div>
        <div class="col-md-2">
          <label class="float-right">* Grado de Criticidad:</label>
        </div>
        <div class="col-md-2">
          <select name="gradocriticidad" id="gradoCriticidad" class="col-md-12 form-control" autocomplete="off">
            <option value="0">Seleccione</option>
            <option value="Crítico">Crítico</option>
            <option value="No Crítico" > No Crítico</option>
          </select>
        </div>
        <div class="col-md-2">
          <button type="button" id="btnAgregarSubproceso" onclick="agregarSubproceso()" class="btn btn-warning"><i class="fa fa-database"></i>  Agregar</button>
        </div>
      </div>
<hr>
			
      <table class="table table-striped table-bordered" id="tableSubProceso" style="width:100%">
              <thead>
                <tr>
                  <th class="text-center">Nro.</th>
                  <th class="text-center">SubProcesos</th>
                  <th class="text-center">Clasificación Criticidad</th>
                  <th class="text-center">Acciones</th>
                </tr>
              </thead>
              <tbody>
              </tbody>
        </table>
<hr>
<button type="submit" id="btnEnviar" class="btn btn-success"><i class="fa fa-database"></i>  Insertar</button>
    </div>
    </div>
  </div>
</div>

<script type="text/javascript">

let txtSubproceso = document.getElementById("subProceso");
let cbxGradoCriticidad = document.getElementById("gradoCriticidad");
let proceso = document.getElementById("idProceso");
let subProcesosArray = [];
let numFilas = 0;
var tabla =  document.getElementById('tableSubProceso');
document.getElementById("btnEnviar").addEventListener("click",function(){
	var baseUrl = "<?php echo base_url(); ?>";
	console.log(baseUrl);
		let elementos = tabla.children[1].children;
		for(let i = 0; i<elementos.length;i++){
			subProcesosArray.push({subProceso:elementos[i].children[1].innerHTML,gradoCriticidad:elementos[i].children[2].innerHTML,proceso:proceso.value});
		} 


		if(subProcesosArray.length>0){
			fetch("<?php echo base_url(); ?>" + "index.php/controller_subprocesos/agregar",{
				method:'POST',
				body:JSON.stringify({data:subProcesosArray})
			}).then(datos=> datos.json())
			.then(datosDevueltos => {
				if(datosDevueltos.status === true){
					window.location.replace("<?php echo base_url(); ?>"+"index.php/controller_subprocesos");
				}else{
					new PNotify({
									title: 'Error',
									text: 'No se pudo guardar los registros.',
									type: 'error',
									hide: false,
									styling: 'bootstrap3'
							});
				}
			
			}).catch(er => {
					new PNotify({
									title: 'Error',
									text: 'Comuniquese con el administrador.',
									type: 'error',
									hide: false,
									styling: 'bootstrap3'
							});
			})
		}else{
			new PNotify({
									title: 'Validacion',
									text: 'Por favor agregue subprocesos.',
									type: 'error',
									hide: false,
									styling: 'bootstrap3'
							});
		}
})

function modificarSubproceso(subproceso){
		let auxProceso = $(subproceso).parent().parent().children();
		txtSubproceso.value = auxProceso[1].innerText;
		cbxGradoCriticidad.value = auxProceso[2].innerText;
		$(subproceso).closest('tr').remove();
}

function eliminarSubproceso(data){
  $(data).closest('tr').remove();
}
function agregarSubproceso(){
	let validate = true;
	if(txtSubproceso.value!=="" && txtSubproceso.value.length>2){
			validate=true;
			if(txtSubproceso.classList.contains('is-invalid')){
				txtSubproceso.classList.remove('is-invalid');
			}
	}else{
		txtSubproceso.classList.add('is-invalid');
		validate = false;
	}
	if(cbxGradoCriticidad.value!=="0" && txtSubproceso.value.length>1){
			validate=true;
			if(cbxGradoCriticidad.classList.contains('is-invalid')){
				cbxGradoCriticidad.classList.remove('is-invalid');
			}
	}else{
		cbxGradoCriticidad.classList.add('is-invalid');
		validate = false;
	}
	if(validate){
		let data = {subProceso:txtSubproceso.value,gradoCriticidad:cbxGradoCriticidad.value,proceso:proceso.value}
		tabla.children[1].insertRow(-1).innerHTML = '<td scope="row"></td><td>'+ data.subProceso +'</td><td>' +data.gradoCriticidad+'</td><td><button type="button" class="btn btn-danger btn-sm borrar" onclick="eliminarSubproceso(this);"><i class="fa fa-trash"></i> Eliminar</button><button type="button" class="btn btn-warning btn-sm modificar" onclick="modificarSubproceso(this);"><i class="fa fa-pencil-square-o"></i>Modificar</button></td>'
		txtSubproceso.value = "";
		cbxGradoCriticidad.value = 0;
	}
}


</script>

Controlador

public function agregar()
	{
		//$data["data"] = $_POST['data'];
		$dataPost = json_decode(file_get_contents('php://input'));
		$data['data']=$dataPost->data;
		$data['idUsuario']=$this->session->userdata('idUsuario');
		$data['fechaRegistro']=date("Y-m-d (H:i:s)");
		//echo json_encode($data);
		$response = $this->Subprocesos_Model->registrarSubproceso($data);
		if($response){	
			//redirect('controller_procesos','refresh');
			echo json_encode(["status" => true]);
		}else{
			echo json_encode(["status" => false]);
		}
		// Lo convierte en un objeto PHP
		//redirect('controller_subprocesos/agregarprevio','refresh');
	}



MODEL


public function registrarSubproceso($data)
	{
	   $this->db->trans_begin();    
		foreach ($data['data'] as  $value) {
			$this->db->insert('subproceso', array(      
				'descripcionSubProceso' => $value->subProceso,      
				'clasificacionCriticidad' => $value->gradoCriticidad,      
				'fechaRegistro' => $data['fechaRegistro'],       
				'idProceso' => $value->proceso,      
				'estado' => 1   
			));  
		}
	   if ($this->db->trans_status() === FALSE){      
		  $this->db->trans_rollback();      
		  return false;    
	   }else{      
		  $this->db->trans_commit();    
		  return true;    
	   }  
	}